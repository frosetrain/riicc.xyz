---
import "../styles/global.css";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import "@fontsource-variable/mona-sans";
// import "@fontsource-variable/public-sans";
import "@fontsource/commit-mono/400.css";
import "@fontsource/commit-mono/700.css";
export interface Props {
    title: string;
}
const { title } = Astro.props;
---

<script is:inline>
    const getThemePreference = () => {
        if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
            return localStorage.getItem("theme");
        }
        return "system"; // Default to system preference
    };

    const applyTheme = (theme) => {
        const isDark = theme === "dark" || (theme === "system" && window.matchMedia("(prefers-color-scheme: dark)").matches);
        document.documentElement.classList[isDark ? "add" : "remove"]("dark");
    };

    // Initial theme application
    const currentTheme = getThemePreference();
    applyTheme(currentTheme);

    // Listen for system theme changes when system is selected
    const setupSystemThemeListener = () => {
        const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
        const handleSystemThemeChange = () => {
            const savedTheme = localStorage.getItem("theme") || "system";
            if (savedTheme === "system") {
                applyTheme("system");
            }
        };

        mediaQuery.addEventListener("change", handleSystemThemeChange);
        return () => mediaQuery.removeEventListener("change", handleSystemThemeChange);
    };

    // Set up the system theme listener
    setupSystemThemeListener();

    // Observer for theme changes from the UI
    if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
            // This observer is mainly for sync purposes,
            // the actual theme management is handled by the React component
        });
        observer.observe(document.documentElement, { attributes: true, attributeFilter: ["class"] });
    }
</script>

<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>{Astro.url.pathname === "/" ? "RI Infocomm Club" : `${title} | RIICC`}</title>
    </head>
    <body class="min-h-dvh flex flex-col">
        <Header />
        <main id="page-content" class="grow">
            <slot />
        </main>
        <Footer />
    </body>
</html>

<style>
    html,
    body {
        margin: 0;
        width: 100%;
        height: 100%;
    }
</style>
