---
import { X, Menu } from "@lucide/astro";
---

<header id="site-header" class="w-full bg-white dark:bg-neutral-900 bg-[url('/diagonal-stripes.svg')] bg-repeat-x z-40 relative">
    <nav class="mx-auto flex max-w-7xl items-center justify-between px-6 py-4 sm:px-16">
        <div></div>
        <div class="flex gap-x-12">
            <button
                id="expand-menu"
                class="bg-neutral-900 text-white dark:bg-white dark:text-black p-2 rounded-full font-medium transition hover:bg-neutral-700 dark:hover:bg-neutral-200"
            >
                <Menu />
            </button>
        </div>
    </nav>
</header>

<!-- Fixed logo overlay that stays in place during animations -->
<div id="fixed-logo" class="top-0 absolute w-full mx-auto z-[100] pointer-events-none" style="transform: none !important;">
    <div class="mx-auto max-w-7xl flex justify-start w-full relative px-6 sm:px-16">
        <a href="/" class="pointer-events-auto">
            <!-- Both logos are stacked with the normal one on top -->
            <div id="logo-container" class="relative">
                <!-- Normal logo that will be clipped -->
                <div id="normal-logo" class="absolute h-dvh top-0 left-0 py-4">
                    <img src="/riicc-onlight.svg" class="h-10 w-auto dark:hidden" />
                    <img src="/riicc-ondark.svg" class="hidden h-10 w-auto dark:block" />
                </div>
                <!-- White logo (always visible behind the clip) -->
                <div id="white-logo" class="absolute h-dvh top-0 left-0 py-4">
                    <img src="/riicc-ondark.svg" class="h-10 w-auto brightness-0 invert" alt="RIICC Logo" />
                </div>
            </div>
        </a>
    </div>
</div>

<div id="fullscreen-nav" class="fixed inset-0 bg-black z-45 hidden overflow-auto">
    <div class="relative h-full flex flex-col">
        <div class="flex justify-between max-w-7xl w-full mx-auto items-center px-6 py-4 sm:px-16">
            <div></div>
            <button id="close-menu" class="text-white p-2 rounded-full hover:bg-neutral-800 transition">
                <X />
            </button>
        </div>

        <!-- Menu content -->
        <nav class="flex flex-col items-center justify-center flex-grow text-center">
            <div class="space-y-10 py-10">
                <a href="/" class="block text-4xl font-bold text-white hover:text-neutral-300 transition-colors"> Home </a>
                <a href="/about" class="block text-4xl font-bold text-white hover:text-neutral-300 transition-colors"> About </a>
                <a href="/activities" class="block text-4xl font-bold text-white hover:text-neutral-300 transition-colors"> Activities </a>
                <a href="/updates" class="block text-4xl font-bold text-white hover:text-neutral-300 transition-colors"> Updates </a>
            </div>
        </nav>
    </div>
</div>

<script>
    import { animate } from "motion";

    const expandButton = document.getElementById("expand-menu");
    const fullscreenNav = document.getElementById("fullscreen-nav");
    const closeButton = document.getElementById("close-menu");
    const header = document.getElementById("site-header");
    const normalLogo = document.getElementById("normal-logo");
    const animationSettings = { ease: "circIn", duration: 0.5 };

    function getContentElements() {
        const elements = [];
        let sibling = header;
        while (sibling) {
            if (sibling.id !== "fullscreen-nav" && sibling.id !== "fixed-logo") {
                elements.push(sibling);
            }
            sibling = sibling.nextElementSibling;
        }
        return elements;
    }

    expandButton?.addEventListener("click", () => {
        const contentElements = getContentElements();
        fullscreenNav?.classList.remove("hidden");
        document.body.style.overflow = "hidden";

        if (fullscreenNav) {
            fullscreenNav.style.transform = "translateY(-100%)";
            normalLogo.style.clipPath = "inset(0 0 0 0)";

            animate(fullscreenNav, { transform: "translateY(0%)" }, animationSettings);
            animate(normalLogo, { clipPath: "inset(100% 0 0 0)" }, animationSettings);
            contentElements.forEach((element) => {
                animate(element, { transform: "translateY(100vh)" }, animationSettings);
            });
        }
    });

    closeButton?.addEventListener("click", () => {
        const contentElements = getContentElements();

        if (fullscreenNav) {
            animate(fullscreenNav, { transform: "translateY(-100%)" }, animationSettings).finished.then(() => {
                fullscreenNav.classList.add("hidden");
                document.body.style.overflow = "";
            });
            animate(normalLogo, { clipPath: "inset(0 0 0 0)" }, animationSettings); // this
            contentElements.forEach((element) => {
                animate(element, { transform: "translateY(0)" }, animationSettings); // this
            });
        }
    });
</script>

<style>
    /* Base styles for the logo container */
    #logo-container {
        width: 100px;
        height: 40px;
    }

    /* Ensure the clipping works properly */
    #normal-logo {
        clip-path: inset(0 0 0 0);
        will-change: clip-path;
        z-index: 2;
    }
</style>
